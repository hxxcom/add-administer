<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="./lib/bootstrap.css">
</head>
<body>
    <!-- 希望vue控制下面这个div -->
    <div id="app">
        <table class="table table-bordered table-hover table-striped">
            <thead>
                <th>编号</th>
                <th>索引</th>
                <th>Id</th>
                <th>姓名</th>
            </thead>
            <tbody>
                <!--官方建议:只要用到了 v-for 指令，那么一定要绑定一个:key 属性 -->
                <!--而且，尽量把id 作为key的值-->
                <!-- :title="item.name+index" -->
                <tr v-for="(item,index) in list" :key="item.id">
                    <td>{{ index }}</td>
                    <td>{{ item.id }}</td>
                    <td>{{ item.name }}</td>
                    <td>{{ item.age }}</td>
                </tr>
            </tbody>
        </table>
        <input type="text" v-model.trim="nextId">
        <input type="text" v-model.trim="username">
        <input type="text" v-model.number="userage">
        <button @click="addNewUser">添加员工</button>
    </div>
    <!-- 1，导入vue的库文件 -->
    <script src="./lib/vue-2.6.12.js"></script>
    <!-- 创建vue的实例对象 -->
    <script>
    //创建vue的实例对象
    const vm=new Vue({
        //el属性是固定的写法，表示当前vm实例来控制页面上的哪个区域，接收的值是一个选择器
        el:'#app',
        //data 对象就是要渲染到页面的数据
        data:{
            list:[ 
                {id:1,name:'张三',age:22},
                {id:2,name:'李四',age:21}
                ]
              
        },
        methods:{
            addNewUser(){
                this.list.unshift({id:this.nextId,name:this.username,age:this.userage})
                this.nextId=''
                this.username=''
                this.userage=''
            }
        }
    })
    </script>
</body>
</html>
